basePath: /
definitions:
  handler.Request:
    properties:
      code:
        type: string
      color:
        type: string
      creationDate:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      published:
        type: boolean
      stock:
        type: integer
    required:
    - code
    - color
    - creationDate
    - name
    - price
    - published
    - stock
    type: object
  handler.RequestPatch:
    properties:
      cantidad:
        type: integer
    required:
    - cantidad
    type: object
  web.Response:
    properties:
      code:
        type: integer
      data: {}
      error:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support Digital House
    url: http://www.swagger.io/support
  description: This is a simple API development by Marcela Cuellar to the Bootcamp
    Go Backend
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://developers.mercadolibre.com.ar/es_ar/terminos-y-condiciones
  title: Bootcamp Go Wave 6 - API - Marcela Cuellar
  version: "1.0"
paths:
  /products:
    get:
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List products
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Not found products
          schema:
            $ref: '#/definitions/web.Response'
        "500":
          description: 'Internal server error '
          schema:
            $ref: '#/definitions/web.Response'
      summary: Show list products
      tags:
      - Products
  /products/{id}:
    patch:
      consumes:
      - application/json
      description: This endpoint update field quantity from an product
      parameters:
      - description: Token header
        in: header
        name: token
        required: true
        type: string
      - description: Product Id
        in: path
        name: id
        required: true
        type: integer
      - description: Product quantity
        in: body
        name: quantity
        required: true
        schema:
          $ref: '#/definitions/handler.RequestPatch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Response'
      summary: Update quantity product
      tags:
      - Products
  /products/AddProduct:
    post:
      consumes:
      - application/json
      parameters:
      - description: token requerido
        in: header
        name: token
        required: true
        type: string
      - description: Product to Store
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/handler.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/web.Response'
      summary: create new product
      tags:
      - Products
swagger: "2.0"
